.gradle:
  image: gradle:6.5.1-jdk11
  variables:
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Xmx256m"
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - build
      - .gradle

.test:
  image: gradle:6.5.1-jdk11
  variables:
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Xmx256m"
  before_script:
    - rm -fr /build/reports/tests
    - export GRADLE_USER_HOME=`pwd`/.gradle
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - build
      - .gradle
  artifacts:
    name: "Tests report for $CI_JOB_NAME"
    when: on_failure
    paths:
      - build/reports/tests
    reports:
      junit:  build/test-results/test/TEST-*.xml
    expire_in: 1 week

build:
  stage: build
  script: gradle -i --build-cache clean assemble
  extends: .gradle

fastTests:
  stage: test
  script: gradle -i test
  extends:
    - .test

slowTests:
  services:
    - docker:dind
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_DRIVER: overlay2
  stage: test
  script: gradle -i slowTest
  extends:
    - .test

buildAndPushDockerImageToGitlabRegistry:
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  stage: deploy
  script:
    - cat gradle.properties | grep "^version = " | sed 's/version = //' > VERSION
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$(cat VERSION)" .
    - docker tag "$CI_REGISTRY_IMAGE:$(cat VERSION)" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:$(cat VERSION)"
    - docker push "$CI_REGISTRY_IMAGE:latest"

buildAndPushDockerImageToDockerHub:
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKERHUB_REGISTRY_USER" -p "$DOCKERHUB_REGISTRY_PASSWORD" $DOCKERHUB_REGISTRY
  stage: deploy
  script:
    - cat gradle.properties | grep "^version = " | sed 's/version = //' > VERSION
    - docker build --pull -t "$DOCKERHUB_REGISTRY_IMAGE:$(cat VERSION)" .
    - docker tag "$DOCKERHUB_REGISTRY_IMAGE:$(cat VERSION)" "$DOCKERHUB_REGISTRY_IMAGE:latest"
    - docker push "$DOCKERHUB_REGISTRY_IMAGE:$(cat VERSION)"
    - docker push "$DOCKERHUB_REGISTRY_IMAGE:latest"
  only:
    - master
    - tags